machine:
  python:
    version: 2.7.6
  services:
    - docker

dependencies:
  pre:
    - pip install awscli
deployment:
  feature-test:
    tag: /feature-test-.*/
    commands:
      - zip -r app.zip Dockerfile nginx.conf conf.d includes proxy_env.conf proxy_env.conf.ci proxy_env.conf.staging proxy_env.conf.prod env.conf env.conf.ci env.conf.staging env.conf.prod upstreams.conf upstreams.conf.ci upstreams.conf.staging upstreams.conf.prod scripts security api resolvers.conf nginx-nr-agent.ini nginx-nr-agent.ini.ci nginx-nr-agent.ini.staging nginx-nr-agent.ini.prod fe mime.types .ebextensions test.upstreams.sh
      - aws s3 cp app.zip s3://garbarino-deploys/nginx/builds/$CIRCLE_SHA1-$CIRCLE_BUILD_NUM.zip
      - aws elasticbeanstalk create-application-version --application-name nginx --version-label $CIRCLE_SHA1-$CIRCLE_BUILD_NUM-$CIRCLE_TAG-snapshot --source-bundle S3Bucket=garbarino-deploys,S3Key=nginx/builds/$CIRCLE_SHA1-$CIRCLE_BUILD_NUM.zip --region us-east-1
  develop:
    branch: develop
    commands:
      - zip -r app.zip Dockerfile nginx.conf conf.d includes proxy_env.conf proxy_env.conf.ci proxy_env.conf.staging proxy_env.conf.prod env.conf env.conf.ci env.conf.staging env.conf.prod upstreams.conf upstreams.conf.ci upstreams.conf.staging upstreams.conf.prod scripts security api resolvers.conf nginx-nr-agent.ini nginx-nr-agent.ini.ci nginx-nr-agent.ini.staging nginx-nr-agent.ini.prod fe mime.types .ebextensions test.upstreams.sh
#      - aws s3 cp app.zip s3://garbarino-deploys/nginx/builds/$CIRCLE_SHA1-$CIRCLE_BUILD_NUM.zip
#      - aws elasticbeanstalk create-application-version --application-name nginx --version-label $CIRCLE_SHA1-$CIRCLE_BUILD_NUM-snapshot --source-bundle S3Bucket=garbarino-deploys,S3Key=nginx/builds/$CIRCLE_SHA1-$CIRCLE_BUILD_NUM.zip --region us-east-1
#      - aws elasticbeanstalk update-environment --environment-name nginx-ci --version-label $CIRCLE_SHA1-$CIRCLE_BUILD_NUM-snapshot --region us-east-1
      - aws lambda invoke  --invocation-type RequestResponse  --function-name trigger_function  --region us-east-1  --log-type Tail --payload '{"ENVIRONMENT":"ci","BRANCH":"develop","APP":"nginx"}' outputfile.txt
  staging:
    branch: master
    commands:
      - zip -r app.zip Dockerfile nginx.conf conf.d includes proxy_env.conf proxy_env.conf.ci proxy_env.conf.staging proxy_env.conf.prod env.conf env.conf.ci env.conf.staging env.conf.prod upstreams.conf upstreams.conf.ci upstreams.conf.staging upstreams.conf.prod scripts security api resolvers.conf nginx-nr-agent.ini nginx-nr-agent.ini.ci nginx-nr-agent.ini.staging nginx-nr-agent.ini.prod fe mime.types .ebextensions test.upstreams.sh
#      - aws s3 cp app.zip s3://garbarino-deploys/nginx/builds/$CIRCLE_SHA1-$CIRCLE_BUILD_NUM.zip
#      - aws elasticbeanstalk create-application-version --application-name nginx --version-label $CIRCLE_SHA1-$CIRCLE_BUILD_NUM-release --source-bundle S3Bucket=garbarino-deploys,S3Key=nginx/builds/$CIRCLE_SHA1-$CIRCLE_BUILD_NUM.zip --region us-east-1
#      - aws elasticbeanstalk update-environment --environment-name nginx-staging --version-label $CIRCLE_SHA1-$CIRCLE_BUILD_NUM-release --region us-east-1
      - aws lambda invoke  --invocation-type RequestResponse  --function-name trigger_function  --region us-east-1  --log-type Tail --payload '{"ENVIRONMENT":"staging","BRANCH":"master","APP":"nginx"}' outputfile.txt
